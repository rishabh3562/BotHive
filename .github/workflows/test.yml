name: CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x]

    # Set required environment variables for build/test
    env:
      # Database config (required for type checking and build)
      DATABASE_PROVIDER: supabase
      SUPABASE_URL: ${{ secrets.SUPABASE_URL || 'https://placeholder.supabase.co' }}
      SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY || 'placeholder-key-for-ci-builds' }}

      # MongoDB (optional, but needed for config validation)
      MONGODB_URI: mongodb://localhost:27017
      MONGODB_DATABASE: bothive

      # JWT (required for auth middleware)
      JWT_SECRET: ci-test-secret-key-do-not-use-in-production
      JWT_REFRESH_SECRET: ci-test-refresh-secret-key-do-not-use-in-production

      # Sentry (optional - dryRun mode if no token)
      SENTRY_DSN: ${{ secrets.SENTRY_DSN }}
      SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
      SENTRY_PROJECT: ${{ secrets.SENTRY_PROJECT || 'bothive' }}
      SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}

      # Next.js
      NEXT_PUBLIC_SITE_URL: http://localhost:3000
      NODE_ENV: test

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run ESLint
        run: npm run lint
        continue-on-error: true  # Don't fail on lint warnings

      - name: Run type checking
        run: npm run type-check

      - name: Run build test
        run: npm run build
        env:
          # Ensure Sentry runs in dry-run mode if no auth token
          SENTRY_DRY_RUN: ${{ secrets.SENTRY_AUTH_TOKEN == '' && 'true' || 'false' }}

      - name: Run tests with coverage
        run: npm run test:coverage
        continue-on-error: false

      - name: Upload coverage reports to Codecov
        if: matrix.node-version == '20.x'
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage/lcov.info
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false  # Don't fail if codecov upload fails
        continue-on-error: true  # Make codecov upload optional

  build:
    runs-on: ubuntu-latest
    needs: test

    env:
      # Same env vars as test job
      DATABASE_PROVIDER: supabase
      SUPABASE_URL: ${{ secrets.SUPABASE_URL || 'https://placeholder.supabase.co' }}
      SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY || 'placeholder-key-for-ci-builds' }}
      MONGODB_URI: mongodb://localhost:27017
      MONGODB_DATABASE: bothive
      JWT_SECRET: ci-test-secret-key-do-not-use-in-production
      JWT_REFRESH_SECRET: ci-test-refresh-secret-key-do-not-use-in-production
      SENTRY_DSN: ${{ secrets.SENTRY_DSN }}
      SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
      SENTRY_PROJECT: ${{ secrets.SENTRY_PROJECT || 'bothive' }}
      SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
      NEXT_PUBLIC_SITE_URL: http://localhost:3000
      NODE_ENV: production

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build application
        run: npm run build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-files-${{ github.sha }}
          path: .next/
          retention-days: 7
